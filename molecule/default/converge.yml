---
- name: Converge
  hosts: all
  vars:
    galaxy_commit_id: "{{ lookup('env', 'GALAXY_COMMIT_ID') }}"
    galaxy_create_user: yes
    galaxy_manage_paths: yes
    galaxy_manage_clone: yes
    galaxy_manage_download: no
    galaxy_manage_existing: no
    galaxy_manage_systemd: yes
    # role default is < 22.05
    galaxy_manage_gravity: "{{ false if __galaxy_major_version is version('22.01', '<') else true }}"
    galaxy_systemd_mode: "{{ 'mule' if __galaxy_major_version is version('22.01', '<') else 'gravity' }}"
    galaxy_config_style: yaml
    galaxy_layout: root-dir
    galaxy_root: /srv/galaxy
    galaxy_separate_privileges: yes
    galaxy_user: galaxy
    galaxy_group: galaxy
    galaxy_privsep_user: gxpriv
    galaxy_config:
      galaxy:
        database_connection: sqlite:///{{ galaxy_mutable_data_dir }}/universe.sqlite
        conda_auto_init: false
    pip_virtualenv_command: /usr/bin/python3 -m venv
  pre_tasks:
    - name: Install dependencies (yum)
      yum:
        # For completeness this should include git, but on EL7 we install a newer git from SCL in the Dockerfile to deal
        # with automatic line ending conversion in the default git 1.8 breaking idempotence
        #name: [sudo, git, make, bzip2]
        name: [sudo, make, bzip2]
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version is version("8", "<")
    - name: Install dependencies (dnf)
      dnf:
        name: [sudo, git, make, bzip2]
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version is version("8", ">=")
    - name: Install dependencies (apt)
      apt:
        name: [sudo, git, make, python3-venv, python3-setuptools]
      when: ansible_os_family == "Debian"
  roles:
    - role: galaxyproject.galaxy
